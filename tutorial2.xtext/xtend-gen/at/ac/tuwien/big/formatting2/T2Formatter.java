/**
 * generated by Xtext 2.27.0
 */
package at.ac.tuwien.big.formatting2;

import at.ac.tuwien.big.services.T2GrammarAccess;
import com.google.inject.Inject;
import factoryTutorial.Factory;
import factoryTutorial.ItemType;
import factoryTutorial.OverseasItem;
import factoryTutorial.OverseasMaterial;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class T2Formatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private T2GrammarAccess _t2GrammarAccess;

  protected void _format(final Factory factory, @Extension final IFormattableDocument document) {
    EList<OverseasItem> _overseasitem = factory.getOverseasitem();
    for (final OverseasItem overseasItem : _overseasitem) {
      document.<OverseasItem>format(overseasItem);
    }
    EList<ItemType> _itemtype = factory.getItemtype();
    for (final ItemType itemType : _itemtype) {
      document.<ItemType>format(itemType);
    }
  }

  protected void _format(final OverseasItem overseasItem, @Extension final IFormattableDocument document) {
    EList<OverseasMaterial> _overseasmaterial = overseasItem.getOverseasmaterial();
    for (final OverseasMaterial overseasMaterial : _overseasmaterial) {
      document.<OverseasMaterial>format(overseasMaterial);
    }
  }

  public void format(final Object factory, final IFormattableDocument document) {
    if (factory instanceof XtextResource) {
      _format((XtextResource)factory, document);
      return;
    } else if (factory instanceof Factory) {
      _format((Factory)factory, document);
      return;
    } else if (factory instanceof OverseasItem) {
      _format((OverseasItem)factory, document);
      return;
    } else if (factory instanceof EObject) {
      _format((EObject)factory, document);
      return;
    } else if (factory == null) {
      _format((Void)null, document);
      return;
    } else if (factory != null) {
      _format(factory, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(factory, document).toString());
    }
  }
}
