/*
 * generated by Xtext 2.27.0
 */
package at.ac.tuwien.big.ide.contentassist.antlr;

import at.ac.tuwien.big.ide.contentassist.antlr.internal.InternalT2Parser;
import at.ac.tuwien.big.services.T2GrammarAccess;
import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class T2Parser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(T2GrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, T2GrammarAccess grammarAccess) {
			builder.put(grammarAccess.getItemTypeAccess().getAlternatives(), "rule__ItemType__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getFactoryAccess().getGroup(), "rule__Factory__Group__0");
			builder.put(grammarAccess.getFactoryAccess().getGroup_4(), "rule__Factory__Group_4__0");
			builder.put(grammarAccess.getFactoryAccess().getGroup_4_3(), "rule__Factory__Group_4_3__0");
			builder.put(grammarAccess.getFactoryAccess().getGroup_5(), "rule__Factory__Group_5__0");
			builder.put(grammarAccess.getFactoryAccess().getGroup_5_3(), "rule__Factory__Group_5_3__0");
			builder.put(grammarAccess.getOverseasItemAccess().getGroup(), "rule__OverseasItem__Group__0");
			builder.put(grammarAccess.getOverseasItemAccess().getGroup_4(), "rule__OverseasItem__Group_4__0");
			builder.put(grammarAccess.getOverseasItemAccess().getGroup_4_3(), "rule__OverseasItem__Group_4_3__0");
			builder.put(grammarAccess.getOverseasMaterialAccess().getGroup(), "rule__OverseasMaterial__Group__0");
			builder.put(grammarAccess.getBasicItemTypeAccess().getGroup(), "rule__BasicItemType__Group__0");
			builder.put(grammarAccess.getComplexItemTypeAccess().getGroup(), "rule__ComplexItemType__Group__0");
			builder.put(grammarAccess.getComplexItemTypeAccess().getGroup_4(), "rule__ComplexItemType__Group_4__0");
			builder.put(grammarAccess.getComplexItemTypeAccess().getGroup_5(), "rule__ComplexItemType__Group_5__0");
			builder.put(grammarAccess.getComplexItemTypeAccess().getGroup_6(), "rule__ComplexItemType__Group_6__0");
			builder.put(grammarAccess.getComplexItemTypeAccess().getGroup_6_3(), "rule__ComplexItemType__Group_6_3__0");
			builder.put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_3(), "rule__Component__Group_3__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_4(), "rule__Component__Group_4__0");
			builder.put(grammarAccess.getComponentAccess().getGroup_5(), "rule__Component__Group_5__0");
			builder.put(grammarAccess.getFactoryAccess().getNameAssignment_2(), "rule__Factory__NameAssignment_2");
			builder.put(grammarAccess.getFactoryAccess().getOverseasitemAssignment_4_2(), "rule__Factory__OverseasitemAssignment_4_2");
			builder.put(grammarAccess.getFactoryAccess().getOverseasitemAssignment_4_3_1(), "rule__Factory__OverseasitemAssignment_4_3_1");
			builder.put(grammarAccess.getFactoryAccess().getItemtypeAssignment_5_2(), "rule__Factory__ItemtypeAssignment_5_2");
			builder.put(grammarAccess.getFactoryAccess().getItemtypeAssignment_5_3_1(), "rule__Factory__ItemtypeAssignment_5_3_1");
			builder.put(grammarAccess.getOverseasItemAccess().getNameAssignment_2(), "rule__OverseasItem__NameAssignment_2");
			builder.put(grammarAccess.getOverseasItemAccess().getOverseasmaterialAssignment_4_2(), "rule__OverseasItem__OverseasmaterialAssignment_4_2");
			builder.put(grammarAccess.getOverseasItemAccess().getOverseasmaterialAssignment_4_3_1(), "rule__OverseasItem__OverseasmaterialAssignment_4_3_1");
			builder.put(grammarAccess.getOverseasMaterialAccess().getNameAssignment_2(), "rule__OverseasMaterial__NameAssignment_2");
			builder.put(grammarAccess.getBasicItemTypeAccess().getNameAssignment_2(), "rule__BasicItemType__NameAssignment_2");
			builder.put(grammarAccess.getComplexItemTypeAccess().getNameAssignment_2(), "rule__ComplexItemType__NameAssignment_2");
			builder.put(grammarAccess.getComplexItemTypeAccess().getOverseasitemAssignment_4_1(), "rule__ComplexItemType__OverseasitemAssignment_4_1");
			builder.put(grammarAccess.getComplexItemTypeAccess().getOverseasmaterialAssignment_5_1(), "rule__ComplexItemType__OverseasmaterialAssignment_5_1");
			builder.put(grammarAccess.getComplexItemTypeAccess().getComponentAssignment_6_2(), "rule__ComplexItemType__ComponentAssignment_6_2");
			builder.put(grammarAccess.getComplexItemTypeAccess().getComponentAssignment_6_3_1(), "rule__ComplexItemType__ComponentAssignment_6_3_1");
			builder.put(grammarAccess.getComponentAccess().getItemtypeAssignment_3_1(), "rule__Component__ItemtypeAssignment_3_1");
			builder.put(grammarAccess.getComponentAccess().getOverseasitemAssignment_4_1(), "rule__Component__OverseasitemAssignment_4_1");
			builder.put(grammarAccess.getComponentAccess().getOverseasmaterialAssignment_5_1(), "rule__Component__OverseasmaterialAssignment_5_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private T2GrammarAccess grammarAccess;

	@Override
	protected InternalT2Parser createParser() {
		InternalT2Parser result = new InternalT2Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public T2GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(T2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
